
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.16.1
 * Query Engine version: b20ead4d3ab9e78ac112966e242ded703f4a052c
 */
Prisma.prismaVersion = {
  client: "4.16.1",
  engine: "b20ead4d3ab9e78ac112966e242ded703f4a052c"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.User_actionScalarFieldEnum = {
  id: 'id',
  time: 'time',
  user_id: 'user_id',
  action: 'action'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  email: 'email',
  password: 'password',
  type: 'type',
  accept_cgu: 'accept_cgu',
  admin: 'admin',
  google_id: 'google_id',
  name: 'name',
  picture: 'picture'
};

exports.Prisma.UeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  name: 'name',
  rank: 'rank'
};

exports.Prisma.Sub_ueScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  name: 'name',
  ue_id: 'ue_id',
  rank: 'rank'
};

exports.Prisma.TopicScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  name: 'name',
  sub_ue_id: 'sub_ue_id',
  rank: 'rank',
  course_content: 'course_content'
};

exports.Prisma.CardScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  topic_id: 'topic_id',
  rank: 'rank',
  title: 'title',
  content: 'content'
};

exports.Prisma.Case_studyScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  topic_id: 'topic_id',
  rank: 'rank',
  title: 'title',
  content: 'content'
};

exports.Prisma.QuizScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  topic_id: 'topic_id',
  rank: 'rank',
  title: 'title',
  question: 'question'
};

exports.Prisma.Quiz_choiceScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  quiz_id: 'quiz_id',
  rank: 'rank',
  text: 'text',
  answer: 'answer',
  comment: 'comment'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserType = {
  admin: 'admin',
  student: 'student'
};

exports.Prisma.ModelName = {
  user_action: 'user_action',
  user: 'user',
  ue: 'ue',
  sub_ue: 'sub_ue',
  topic: 'topic',
  card: 'card',
  case_study: 'case_study',
  quiz: 'quiz',
  quiz_choice: 'quiz_choice'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
